% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Boost.R
\name{NNS.boost}
\alias{NNS.boost}
\title{NNS Boost}
\usage{
NNS.boost(IVs.train, DV.train, IVs.test, depth = NULL, epochs = 500,
  folds = 5, CV.size = 0.2, threshold = NULL,
  feature.importance = TRUE, ncores = NULL)
}
\arguments{
\item{IVs.train}{a matrix or data frame of variables of numeric or factor data types.}

\item{DV.train}{a numeric or factor vector with compatible dimsensions to \code{(IVs.train)}.}

\item{IVs.test}{a matrix or data frame of variables of numeric or factor data types with compatible dimsensions to \code{(IVs.train)}.}

\item{depth}{integer; \code{NULL} (default) Specifies the \code{order} parameter in the \code{NNS.reg} routine, assigning a number of splits in the regressors.}

\item{epochs}{integer; 500 (default) Total number of feature combinations to run.}

\item{folds}{integer; 5 (default) Number of times to resample the training data.  Splits the \code{epochs} over the dataset evenly over each \code{folds}.}

\item{CV.size}{numeric [0, 1]; \code{NULL} (default) Sets the cross-validation size if \code{(IVs.test = NULL)}.  Defaults to 0.25 for a 25 percent random sampling of the training set under \code{(CV.size = NULL)}.}

\item{threshold}{numeric [0, 1]; \code{NULL} (default) Sets the \code{obj.fn} threshold to keep feature combinations.}

\item{feature.importance}{logical; \code{TRUE} (default) Plots the frequency of features used in the final estimate.}

\item{ncores}{integer; value specifying the number of cores to be used in the parallelized  procedure. If NULL (default), the number of cores to be used is equal to the number of cores of the machine - 1.}
}
\value{
Returns a vector of fitted values for the dependent variable test set.
}
\description{
Ensemble method using the predictions of the NNS base models \link{NNS.reg} for various uncorrelated feature combinations.
}
\note{
Currently only objective function is to maximize \code{mean(round(predicted)==as.numeric(actual))} since it is a classifier.  For a regression problem, simply use \code{NNS.reg}!
}
\examples{
 ## Using 'iris' dataset where test set [IVs.test] is 'iris' rows 141:150.
 \dontrun{
 a = NNS.boost(iris[1:140, 1:4], iris[1:140, 5], IVs.test = iris[141:150, 1:4], epochs = 100)

 ## Test accuracy
 mean(round(a)==as.numeric(iris[141:150,5]))
 }

}
\references{
Viole, F. (2016) "Classification Using NNS Clustering Analysis"
\url{https://ssrn.com/abstract=2864711}
}
\author{
Fred Viole, OVVO Financial Systems
}
\keyword{classifier}
